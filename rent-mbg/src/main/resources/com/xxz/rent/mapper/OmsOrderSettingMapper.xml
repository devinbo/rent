<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxz.rent.mapper.OmsOrderSettingMapper">
  <resultMap id="BaseResultMap" type="com.xxz.rent.model.OmsOrderSetting">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="normal_order_overtime" jdbcType="INTEGER" property="normalOrderOvertime" />
    <result column="payment_integral" jdbcType="INTEGER" property="paymentIntegral" />
    <result column="overdue_rate" jdbcType="INTEGER" property="overdueRate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, normal_order_overtime, payment_integral, overdue_rate
  </sql>
  <select id="selectByExample" parameterType="com.xxz.rent.model.OmsOrderSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oms_order_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oms_order_setting
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oms_order_setting
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxz.rent.model.OmsOrderSettingExample">
    delete from oms_order_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxz.rent.model.OmsOrderSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_setting (normal_order_overtime, payment_integral, 
      overdue_rate)
    values (#{normalOrderOvertime,jdbcType=INTEGER}, #{paymentIntegral,jdbcType=INTEGER}, 
      #{overdueRate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xxz.rent.model.OmsOrderSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_order_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="normalOrderOvertime != null">
        normal_order_overtime,
      </if>
      <if test="paymentIntegral != null">
        payment_integral,
      </if>
      <if test="overdueRate != null">
        overdue_rate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="normalOrderOvertime != null">
        #{normalOrderOvertime,jdbcType=INTEGER},
      </if>
      <if test="paymentIntegral != null">
        #{paymentIntegral,jdbcType=INTEGER},
      </if>
      <if test="overdueRate != null">
        #{overdueRate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxz.rent.model.OmsOrderSettingExample" resultType="java.lang.Long">
    select count(*) from oms_order_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oms_order_setting
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.normalOrderOvertime != null">
        normal_order_overtime = #{record.normalOrderOvertime,jdbcType=INTEGER},
      </if>
      <if test="record.paymentIntegral != null">
        payment_integral = #{record.paymentIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.overdueRate != null">
        overdue_rate = #{record.overdueRate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oms_order_setting
    set id = #{record.id,jdbcType=BIGINT},
      normal_order_overtime = #{record.normalOrderOvertime,jdbcType=INTEGER},
      payment_integral = #{record.paymentIntegral,jdbcType=INTEGER},
      overdue_rate = #{record.overdueRate,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxz.rent.model.OmsOrderSetting">
    update oms_order_setting
    <set>
      <if test="normalOrderOvertime != null">
        normal_order_overtime = #{normalOrderOvertime,jdbcType=INTEGER},
      </if>
      <if test="paymentIntegral != null">
        payment_integral = #{paymentIntegral,jdbcType=INTEGER},
      </if>
      <if test="overdueRate != null">
        overdue_rate = #{overdueRate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxz.rent.model.OmsOrderSetting">
    update oms_order_setting
    set normal_order_overtime = #{normalOrderOvertime,jdbcType=INTEGER},
      payment_integral = #{paymentIntegral,jdbcType=INTEGER},
      overdue_rate = #{overdueRate,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>