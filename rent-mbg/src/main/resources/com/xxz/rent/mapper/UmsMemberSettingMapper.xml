<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxz.rent.mapper.UmsMemberSettingMapper">
  <resultMap id="BaseResultMap" type="com.xxz.rent.model.UmsMemberSetting">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="regist_integral" jdbcType="INTEGER" property="registIntegral" />
    <result column="member_free_amount" jdbcType="DECIMAL" property="memberFreeAmount" />
    <result column="realinform_amount" jdbcType="DECIMAL" property="realinformAmount" />
    <result column="baseinfo_amount" jdbcType="DECIMAL" property="baseinfoAmount" />
    <result column="kinsfolk_amount" jdbcType="DECIMAL" property="kinsfolkAmount" />
    <result column="link_amount" jdbcType="DECIMAL" property="linkAmount" />
    <result column="taobao_amount" jdbcType="DECIMAL" property="taobaoAmount" />
    <result column="mobile_amount" jdbcType="DECIMAL" property="mobileAmount" />
    <result column="study_amount" jdbcType="DECIMAL" property="studyAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, regist_integral, member_free_amount, realinform_amount, baseinfo_amount, kinsfolk_amount, 
    link_amount, taobao_amount, mobile_amount, study_amount
  </sql>
  <select id="selectByExample" parameterType="com.xxz.rent.model.UmsMemberSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ums_member_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ums_member_setting
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ums_member_setting
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxz.rent.model.UmsMemberSettingExample">
    delete from ums_member_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxz.rent.model.UmsMemberSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_member_setting (regist_integral, member_free_amount, 
      realinform_amount, baseinfo_amount, kinsfolk_amount, 
      link_amount, taobao_amount, mobile_amount, 
      study_amount)
    values (#{registIntegral,jdbcType=INTEGER}, #{memberFreeAmount,jdbcType=DECIMAL}, 
      #{realinformAmount,jdbcType=DECIMAL}, #{baseinfoAmount,jdbcType=DECIMAL}, #{kinsfolkAmount,jdbcType=DECIMAL}, 
      #{linkAmount,jdbcType=DECIMAL}, #{taobaoAmount,jdbcType=DECIMAL}, #{mobileAmount,jdbcType=DECIMAL}, 
      #{studyAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.xxz.rent.model.UmsMemberSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ums_member_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="registIntegral != null">
        regist_integral,
      </if>
      <if test="memberFreeAmount != null">
        member_free_amount,
      </if>
      <if test="realinformAmount != null">
        realinform_amount,
      </if>
      <if test="baseinfoAmount != null">
        baseinfo_amount,
      </if>
      <if test="kinsfolkAmount != null">
        kinsfolk_amount,
      </if>
      <if test="linkAmount != null">
        link_amount,
      </if>
      <if test="taobaoAmount != null">
        taobao_amount,
      </if>
      <if test="mobileAmount != null">
        mobile_amount,
      </if>
      <if test="studyAmount != null">
        study_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="registIntegral != null">
        #{registIntegral,jdbcType=INTEGER},
      </if>
      <if test="memberFreeAmount != null">
        #{memberFreeAmount,jdbcType=DECIMAL},
      </if>
      <if test="realinformAmount != null">
        #{realinformAmount,jdbcType=DECIMAL},
      </if>
      <if test="baseinfoAmount != null">
        #{baseinfoAmount,jdbcType=DECIMAL},
      </if>
      <if test="kinsfolkAmount != null">
        #{kinsfolkAmount,jdbcType=DECIMAL},
      </if>
      <if test="linkAmount != null">
        #{linkAmount,jdbcType=DECIMAL},
      </if>
      <if test="taobaoAmount != null">
        #{taobaoAmount,jdbcType=DECIMAL},
      </if>
      <if test="mobileAmount != null">
        #{mobileAmount,jdbcType=DECIMAL},
      </if>
      <if test="studyAmount != null">
        #{studyAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxz.rent.model.UmsMemberSettingExample" resultType="java.lang.Long">
    select count(*) from ums_member_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ums_member_setting
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.registIntegral != null">
        regist_integral = #{record.registIntegral,jdbcType=INTEGER},
      </if>
      <if test="record.memberFreeAmount != null">
        member_free_amount = #{record.memberFreeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.realinformAmount != null">
        realinform_amount = #{record.realinformAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.baseinfoAmount != null">
        baseinfo_amount = #{record.baseinfoAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.kinsfolkAmount != null">
        kinsfolk_amount = #{record.kinsfolkAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.linkAmount != null">
        link_amount = #{record.linkAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.taobaoAmount != null">
        taobao_amount = #{record.taobaoAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.mobileAmount != null">
        mobile_amount = #{record.mobileAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.studyAmount != null">
        study_amount = #{record.studyAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ums_member_setting
    set id = #{record.id,jdbcType=BIGINT},
      regist_integral = #{record.registIntegral,jdbcType=INTEGER},
      member_free_amount = #{record.memberFreeAmount,jdbcType=DECIMAL},
      realinform_amount = #{record.realinformAmount,jdbcType=DECIMAL},
      baseinfo_amount = #{record.baseinfoAmount,jdbcType=DECIMAL},
      kinsfolk_amount = #{record.kinsfolkAmount,jdbcType=DECIMAL},
      link_amount = #{record.linkAmount,jdbcType=DECIMAL},
      taobao_amount = #{record.taobaoAmount,jdbcType=DECIMAL},
      mobile_amount = #{record.mobileAmount,jdbcType=DECIMAL},
      study_amount = #{record.studyAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxz.rent.model.UmsMemberSetting">
    update ums_member_setting
    <set>
      <if test="registIntegral != null">
        regist_integral = #{registIntegral,jdbcType=INTEGER},
      </if>
      <if test="memberFreeAmount != null">
        member_free_amount = #{memberFreeAmount,jdbcType=DECIMAL},
      </if>
      <if test="realinformAmount != null">
        realinform_amount = #{realinformAmount,jdbcType=DECIMAL},
      </if>
      <if test="baseinfoAmount != null">
        baseinfo_amount = #{baseinfoAmount,jdbcType=DECIMAL},
      </if>
      <if test="kinsfolkAmount != null">
        kinsfolk_amount = #{kinsfolkAmount,jdbcType=DECIMAL},
      </if>
      <if test="linkAmount != null">
        link_amount = #{linkAmount,jdbcType=DECIMAL},
      </if>
      <if test="taobaoAmount != null">
        taobao_amount = #{taobaoAmount,jdbcType=DECIMAL},
      </if>
      <if test="mobileAmount != null">
        mobile_amount = #{mobileAmount,jdbcType=DECIMAL},
      </if>
      <if test="studyAmount != null">
        study_amount = #{studyAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxz.rent.model.UmsMemberSetting">
    update ums_member_setting
    set regist_integral = #{registIntegral,jdbcType=INTEGER},
      member_free_amount = #{memberFreeAmount,jdbcType=DECIMAL},
      realinform_amount = #{realinformAmount,jdbcType=DECIMAL},
      baseinfo_amount = #{baseinfoAmount,jdbcType=DECIMAL},
      kinsfolk_amount = #{kinsfolkAmount,jdbcType=DECIMAL},
      link_amount = #{linkAmount,jdbcType=DECIMAL},
      taobao_amount = #{taobaoAmount,jdbcType=DECIMAL},
      mobile_amount = #{mobileAmount,jdbcType=DECIMAL},
      study_amount = #{studyAmount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>