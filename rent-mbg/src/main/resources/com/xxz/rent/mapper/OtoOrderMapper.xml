<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxz.rent.mapper.OtoOrderMapper">
  <resultMap id="BaseResultMap" type="com.xxz.rent.model.OtoOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_title" jdbcType="VARCHAR" property="productTitle" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="member_username" jdbcType="VARCHAR" property="memberUsername" />
    <result column="member_phone" jdbcType="VARCHAR" property="memberPhone" />
    <result column="sign_amount" jdbcType="DECIMAL" property="signAmount" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="integration_amount" jdbcType="DECIMAL" property="integrationAmount" />
    <result column="use_free_money" jdbcType="DECIMAL" property="useFreeMoney" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="source_type" jdbcType="INTEGER" property="sourceType" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="coupon_name" jdbcType="VARCHAR" property="couponName" />
    <result column="rent_pay_money" jdbcType="DECIMAL" property="rentPayMoney" />
    <result column="rent_pay_time" jdbcType="TIMESTAMP" property="rentPayTime" />
    <result column="each_price" jdbcType="DECIMAL" property="eachPrice" />
    <result column="curr_period" jdbcType="INTEGER" property="currPeriod" />
    <result column="periods" jdbcType="INTEGER" property="periods" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="sign_file" jdbcType="VARCHAR" property="signFile" />
    <result column="trade_type" jdbcType="INTEGER" property="tradeType" />
    <result column="trade_date" jdbcType="TIMESTAMP" property="tradeDate" />
    <result column="delete_status" jdbcType="INTEGER" property="deleteStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, product_title, status, order_sn, create_time, member_id, member_username, 
    member_phone, sign_amount, pay_amount, integration_amount, use_free_money, payment_time, 
    pay_type, source_type, note, coupon_name, rent_pay_money, rent_pay_time, each_price, 
    curr_period, periods, unit, sign_file, trade_type, trade_date, delete_status
  </sql>
  <select id="selectByExample" parameterType="com.xxz.rent.model.OtoOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oto_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oto_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from oto_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.xxz.rent.model.OtoOrderExample">
    delete from oto_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xxz.rent.model.OtoOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oto_order (product_id, product_title, status, 
      order_sn, create_time, member_id, 
      member_username, member_phone, sign_amount, 
      pay_amount, integration_amount, use_free_money, 
      payment_time, pay_type, source_type, 
      note, coupon_name, rent_pay_money, 
      rent_pay_time, each_price, curr_period, 
      periods, unit, sign_file, 
      trade_type, trade_date, delete_status
      )
    values (#{productId,jdbcType=BIGINT}, #{productTitle,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{orderSn,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{memberId,jdbcType=BIGINT}, 
      #{memberUsername,jdbcType=VARCHAR}, #{memberPhone,jdbcType=VARCHAR}, #{signAmount,jdbcType=DECIMAL}, 
      #{payAmount,jdbcType=DECIMAL}, #{integrationAmount,jdbcType=DECIMAL}, #{useFreeMoney,jdbcType=DECIMAL}, 
      #{paymentTime,jdbcType=TIMESTAMP}, #{payType,jdbcType=INTEGER}, #{sourceType,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR}, #{couponName,jdbcType=VARCHAR}, #{rentPayMoney,jdbcType=DECIMAL}, 
      #{rentPayTime,jdbcType=TIMESTAMP}, #{eachPrice,jdbcType=DECIMAL}, #{currPeriod,jdbcType=INTEGER}, 
      #{periods,jdbcType=INTEGER}, #{unit,jdbcType=INTEGER}, #{signFile,jdbcType=VARCHAR}, 
      #{tradeType,jdbcType=INTEGER}, #{tradeDate,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxz.rent.model.OtoOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oto_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        product_id,
      </if>
      <if test="productTitle != null">
        product_title,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orderSn != null">
        order_sn,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberUsername != null">
        member_username,
      </if>
      <if test="memberPhone != null">
        member_phone,
      </if>
      <if test="signAmount != null">
        sign_amount,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="integrationAmount != null">
        integration_amount,
      </if>
      <if test="useFreeMoney != null">
        use_free_money,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="couponName != null">
        coupon_name,
      </if>
      <if test="rentPayMoney != null">
        rent_pay_money,
      </if>
      <if test="rentPayTime != null">
        rent_pay_time,
      </if>
      <if test="eachPrice != null">
        each_price,
      </if>
      <if test="currPeriod != null">
        curr_period,
      </if>
      <if test="periods != null">
        periods,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="signFile != null">
        sign_file,
      </if>
      <if test="tradeType != null">
        trade_type,
      </if>
      <if test="tradeDate != null">
        trade_date,
      </if>
      <if test="deleteStatus != null">
        delete_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productTitle != null">
        #{productTitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="orderSn != null">
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberUsername != null">
        #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="memberPhone != null">
        #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="signAmount != null">
        #{signAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="integrationAmount != null">
        #{integrationAmount,jdbcType=DECIMAL},
      </if>
      <if test="useFreeMoney != null">
        #{useFreeMoney,jdbcType=DECIMAL},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="couponName != null">
        #{couponName,jdbcType=VARCHAR},
      </if>
      <if test="rentPayMoney != null">
        #{rentPayMoney,jdbcType=DECIMAL},
      </if>
      <if test="rentPayTime != null">
        #{rentPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eachPrice != null">
        #{eachPrice,jdbcType=DECIMAL},
      </if>
      <if test="currPeriod != null">
        #{currPeriod,jdbcType=INTEGER},
      </if>
      <if test="periods != null">
        #{periods,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="signFile != null">
        #{signFile,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="tradeDate != null">
        #{tradeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        #{deleteStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xxz.rent.model.OtoOrderExample" resultType="java.lang.Long">
    select count(*) from oto_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oto_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.productTitle != null">
        product_title = #{record.productTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.orderSn != null">
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=BIGINT},
      </if>
      <if test="record.memberUsername != null">
        member_username = #{record.memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.memberPhone != null">
        member_phone = #{record.memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.signAmount != null">
        sign_amount = #{record.signAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.integrationAmount != null">
        integration_amount = #{record.integrationAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.useFreeMoney != null">
        use_free_money = #{record.useFreeMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.sourceType != null">
        source_type = #{record.sourceType,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.couponName != null">
        coupon_name = #{record.couponName,jdbcType=VARCHAR},
      </if>
      <if test="record.rentPayMoney != null">
        rent_pay_money = #{record.rentPayMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.rentPayTime != null">
        rent_pay_time = #{record.rentPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.eachPrice != null">
        each_price = #{record.eachPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.currPeriod != null">
        curr_period = #{record.currPeriod,jdbcType=INTEGER},
      </if>
      <if test="record.periods != null">
        periods = #{record.periods,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.signFile != null">
        sign_file = #{record.signFile,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeType != null">
        trade_type = #{record.tradeType,jdbcType=INTEGER},
      </if>
      <if test="record.tradeDate != null">
        trade_date = #{record.tradeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteStatus != null">
        delete_status = #{record.deleteStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oto_order
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      product_title = #{record.productTitle,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      member_id = #{record.memberId,jdbcType=BIGINT},
      member_username = #{record.memberUsername,jdbcType=VARCHAR},
      member_phone = #{record.memberPhone,jdbcType=VARCHAR},
      sign_amount = #{record.signAmount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      integration_amount = #{record.integrationAmount,jdbcType=DECIMAL},
      use_free_money = #{record.useFreeMoney,jdbcType=DECIMAL},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      pay_type = #{record.payType,jdbcType=INTEGER},
      source_type = #{record.sourceType,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      coupon_name = #{record.couponName,jdbcType=VARCHAR},
      rent_pay_money = #{record.rentPayMoney,jdbcType=DECIMAL},
      rent_pay_time = #{record.rentPayTime,jdbcType=TIMESTAMP},
      each_price = #{record.eachPrice,jdbcType=DECIMAL},
      curr_period = #{record.currPeriod,jdbcType=INTEGER},
      periods = #{record.periods,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=INTEGER},
      sign_file = #{record.signFile,jdbcType=VARCHAR},
      trade_type = #{record.tradeType,jdbcType=INTEGER},
      trade_date = #{record.tradeDate,jdbcType=TIMESTAMP},
      delete_status = #{record.deleteStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxz.rent.model.OtoOrder">
    update oto_order
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productTitle != null">
        product_title = #{productTitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="orderSn != null">
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberUsername != null">
        member_username = #{memberUsername,jdbcType=VARCHAR},
      </if>
      <if test="memberPhone != null">
        member_phone = #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="signAmount != null">
        sign_amount = #{signAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="integrationAmount != null">
        integration_amount = #{integrationAmount,jdbcType=DECIMAL},
      </if>
      <if test="useFreeMoney != null">
        use_free_money = #{useFreeMoney,jdbcType=DECIMAL},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="couponName != null">
        coupon_name = #{couponName,jdbcType=VARCHAR},
      </if>
      <if test="rentPayMoney != null">
        rent_pay_money = #{rentPayMoney,jdbcType=DECIMAL},
      </if>
      <if test="rentPayTime != null">
        rent_pay_time = #{rentPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eachPrice != null">
        each_price = #{eachPrice,jdbcType=DECIMAL},
      </if>
      <if test="currPeriod != null">
        curr_period = #{currPeriod,jdbcType=INTEGER},
      </if>
      <if test="periods != null">
        periods = #{periods,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="signFile != null">
        sign_file = #{signFile,jdbcType=VARCHAR},
      </if>
      <if test="tradeType != null">
        trade_type = #{tradeType,jdbcType=INTEGER},
      </if>
      <if test="tradeDate != null">
        trade_date = #{tradeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null">
        delete_status = #{deleteStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxz.rent.model.OtoOrder">
    update oto_order
    set product_id = #{productId,jdbcType=BIGINT},
      product_title = #{productTitle,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      order_sn = #{orderSn,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      member_id = #{memberId,jdbcType=BIGINT},
      member_username = #{memberUsername,jdbcType=VARCHAR},
      member_phone = #{memberPhone,jdbcType=VARCHAR},
      sign_amount = #{signAmount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      integration_amount = #{integrationAmount,jdbcType=DECIMAL},
      use_free_money = #{useFreeMoney,jdbcType=DECIMAL},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      pay_type = #{payType,jdbcType=INTEGER},
      source_type = #{sourceType,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      coupon_name = #{couponName,jdbcType=VARCHAR},
      rent_pay_money = #{rentPayMoney,jdbcType=DECIMAL},
      rent_pay_time = #{rentPayTime,jdbcType=TIMESTAMP},
      each_price = #{eachPrice,jdbcType=DECIMAL},
      curr_period = #{currPeriod,jdbcType=INTEGER},
      periods = #{periods,jdbcType=INTEGER},
      unit = #{unit,jdbcType=INTEGER},
      sign_file = #{signFile,jdbcType=VARCHAR},
      trade_type = #{tradeType,jdbcType=INTEGER},
      trade_date = #{tradeDate,jdbcType=TIMESTAMP},
      delete_status = #{deleteStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>